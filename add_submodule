#!/bin/ruby

if ARGV.empty?
  puts "usage: add_submodule git@github.com:foo/bar.git"
  exit 1
end

def ensure_git_protocol(repo)
  return repo unless repo.start_with?('git@')
  repo.sub(':', '/')
      .sub('git@', 'git://')
end

def repo_name(repo)
  repo.split('/').last.sub('.git', '')
end

def sh(cmd)
  puts cmd
  system(cmd)
end

ARGV.each do |repo|
  repo = ensure_git_protocol(repo)
  name = repo_name(repo)
  sh "git submodule add #{repo} packages/#{name}"
  sh "git submodule update --init --recursive packages/#{name}"
end

delim = '[submodule'
submodules = File.read('.gitmodules').split(delim).reject(&:empty?)
submodules.map! do |s|
  s = "#{delim}#{s}".strip
  s = "#{s}\n  ignore = dirty" unless s.include?('ignore = dirty')
  s.gsub("\t", "  ")
end
File.write('.gitmodules', submodules.sort.join("\n\n") + "\n")
sh "git add .gitmodules"
